/*
 * This file is generated by jOOQ.
 */
package org.bspv.evouchers.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.bspv.evouchers.jooq.Indexes;
import org.bspv.evouchers.jooq.Keys;
import org.bspv.evouchers.jooq.Public;
import org.bspv.evouchers.jooq.tables.records.EvoucherEventsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EvoucherEvents extends TableImpl<EvoucherEventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>PUBLIC.EVOUCHER_EVENTS</code>
     */
    public static final EvoucherEvents EVOUCHER_EVENTS = new EvoucherEvents();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvoucherEventsRecord> getRecordType() {
        return EvoucherEventsRecord.class;
    }

    /**
     * The column <code>PUBLIC.EVOUCHER_EVENTS.ID</code>.
     */
    public final TableField<EvoucherEventsRecord, Long> ID = createField(DSL.name("ID"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHER_EVENTS.EVOUCHER_ID</code>.
     */
    public final TableField<EvoucherEventsRecord, UUID> EVOUCHER_ID = createField(DSL.name("EVOUCHER_ID"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHER_EVENTS.EVENT_TYPE</code>.
     */
    public final TableField<EvoucherEventsRecord, String> EVENT_TYPE = createField(DSL.name("EVENT_TYPE"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHER_EVENTS.CREATED_BY</code>.
     */
    public final TableField<EvoucherEventsRecord, UUID> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHER_EVENTS.CREATED_DATE</code>.
     */
    public final TableField<EvoucherEventsRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("CREATED_DATE"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    private EvoucherEvents(Name alias, Table<EvoucherEventsRecord> aliased) {
        this(alias, aliased, null);
    }

    private EvoucherEvents(Name alias, Table<EvoucherEventsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>PUBLIC.EVOUCHER_EVENTS</code> table reference
     */
    public EvoucherEvents(String alias) {
        this(DSL.name(alias), EVOUCHER_EVENTS);
    }

    /**
     * Create an aliased <code>PUBLIC.EVOUCHER_EVENTS</code> table reference
     */
    public EvoucherEvents(Name alias) {
        this(alias, EVOUCHER_EVENTS);
    }

    /**
     * Create a <code>PUBLIC.EVOUCHER_EVENTS</code> table reference
     */
    public EvoucherEvents() {
        this(DSL.name("EVOUCHER_EVENTS"), null);
    }

    public <O extends Record> EvoucherEvents(Table<O> child, ForeignKey<O, EvoucherEventsRecord> key) {
        super(child, key, EVOUCHER_EVENTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FK_EVOUCHER_EVENTS__EVOUCHERS, Indexes.FK_EVOUCHERS_EVENTS__USERS, Indexes.IX_EVOUCHER_EVENTS__EVOUCHER_ID, Indexes.SYS_PK_10172);
    }

    @Override
    public Identity<EvoucherEventsRecord, Long> getIdentity() {
        return (Identity<EvoucherEventsRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<EvoucherEventsRecord> getPrimaryKey() {
        return Keys.SYS_PK_10172;
    }

    @Override
    public List<UniqueKey<EvoucherEventsRecord>> getKeys() {
        return Arrays.<UniqueKey<EvoucherEventsRecord>>asList(Keys.SYS_PK_10172);
    }

    @Override
    public List<ForeignKey<EvoucherEventsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EvoucherEventsRecord, ?>>asList(Keys.FK_EVOUCHER_EVENTS__EVOUCHERS, Keys.FK_EVOUCHERS_EVENTS__USERS);
    }

    private transient Evouchers _evouchers;
    private transient Users _users;

    public Evouchers evouchers() {
        if (_evouchers == null)
            _evouchers = new Evouchers(this, Keys.FK_EVOUCHER_EVENTS__EVOUCHERS);

        return _evouchers;
    }

    public Users users() {
        if (_users == null)
            _users = new Users(this, Keys.FK_EVOUCHERS_EVENTS__USERS);

        return _users;
    }

    @Override
    public EvoucherEvents as(String alias) {
        return new EvoucherEvents(DSL.name(alias), this);
    }

    @Override
    public EvoucherEvents as(Name alias) {
        return new EvoucherEvents(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EvoucherEvents rename(String name) {
        return new EvoucherEvents(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EvoucherEvents rename(Name name) {
        return new EvoucherEvents(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, UUID, String, UUID, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
