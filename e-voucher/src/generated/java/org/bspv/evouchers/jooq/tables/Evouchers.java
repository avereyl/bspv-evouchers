/*
 * This file is generated by jOOQ.
 */
package org.bspv.evouchers.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.bspv.evouchers.jooq.Indexes;
import org.bspv.evouchers.jooq.Keys;
import org.bspv.evouchers.jooq.Public;
import org.bspv.evouchers.jooq.tables.records.EvouchersRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Evouchers extends TableImpl<EvouchersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>PUBLIC.EVOUCHERS</code>
     */
    public static final Evouchers EVOUCHERS = new Evouchers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvouchersRecord> getRecordType() {
        return EvouchersRecord.class;
    }

    /**
     * The column <code>PUBLIC.EVOUCHERS.ID</code>.
     */
    public final TableField<EvouchersRecord, UUID> ID = createField(DSL.name("ID"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.VERSION</code>.
     */
    public final TableField<EvouchersRecord, Long> VERSION = createField(DSL.name("VERSION"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.CREATED_BY</code>.
     */
    public final TableField<EvouchersRecord, UUID> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.CREATED_DATE</code>.
     */
    public final TableField<EvouchersRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("CREATED_DATE"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.LAST_MODIFIED_BY</code>.
     */
    public final TableField<EvouchersRecord, UUID> LAST_MODIFIED_BY = createField(DSL.name("LAST_MODIFIED_BY"), SQLDataType.UUID, this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.LAST_MODIFIED_DATE</code>.
     */
    public final TableField<EvouchersRecord, LocalDateTime> LAST_MODIFIED_DATE = createField(DSL.name("LAST_MODIFIED_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.NAME</code>.
     */
    public final TableField<EvouchersRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(75).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.EMAIL</code>.
     */
    public final TableField<EvouchersRecord, String> EMAIL = createField(DSL.name("EMAIL"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.REQUEST_DATE</code>.
     */
    public final TableField<EvouchersRecord, LocalDateTime> REQUEST_DATE = createField(DSL.name("REQUEST_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.AMOUNT</code>.
     */
    public final TableField<EvouchersRecord, BigDecimal> AMOUNT = createField(DSL.name("AMOUNT"), SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(DSL.field("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.STATUS</code>.
     */
    public final TableField<EvouchersRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.DISTRIBUTION_YEAR</code>.
     */
    public final TableField<EvouchersRecord, Integer> DISTRIBUTION_YEAR = createField(DSL.name("DISTRIBUTION_YEAR"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.EVOUCHERS.TEAM_NUMBER</code>.
     */
    public final TableField<EvouchersRecord, Integer> TEAM_NUMBER = createField(DSL.name("TEAM_NUMBER"), SQLDataType.INTEGER.nullable(false), this, "");

    private Evouchers(Name alias, Table<EvouchersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Evouchers(Name alias, Table<EvouchersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>PUBLIC.EVOUCHERS</code> table reference
     */
    public Evouchers(String alias) {
        this(DSL.name(alias), EVOUCHERS);
    }

    /**
     * Create an aliased <code>PUBLIC.EVOUCHERS</code> table reference
     */
    public Evouchers(Name alias) {
        this(alias, EVOUCHERS);
    }

    /**
     * Create a <code>PUBLIC.EVOUCHERS</code> table reference
     */
    public Evouchers() {
        this(DSL.name("EVOUCHERS"), null);
    }

    public <O extends Record> Evouchers(Table<O> child, ForeignKey<O, EvouchersRecord> key) {
        super(child, key, EVOUCHERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FK_EVOUCHERS__USERS_1, Indexes.FK_EVOUCHERS__USERS_2, Indexes.IX_EVOUCHERS__STATUS, Indexes.SYS_PK_10156);
    }

    @Override
    public UniqueKey<EvouchersRecord> getPrimaryKey() {
        return Keys.SYS_PK_10156;
    }

    @Override
    public List<UniqueKey<EvouchersRecord>> getKeys() {
        return Arrays.<UniqueKey<EvouchersRecord>>asList(Keys.SYS_PK_10156);
    }

    @Override
    public List<ForeignKey<EvouchersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EvouchersRecord, ?>>asList(Keys.FK_EVOUCHERS__USERS_1, Keys.FK_EVOUCHERS__USERS_2);
    }

    private transient Users _fkEvouchers_Users_1;
    private transient Users _fkEvouchers_Users_2;

    public Users fkEvouchers_Users_1() {
        if (_fkEvouchers_Users_1 == null)
            _fkEvouchers_Users_1 = new Users(this, Keys.FK_EVOUCHERS__USERS_1);

        return _fkEvouchers_Users_1;
    }

    public Users fkEvouchers_Users_2() {
        if (_fkEvouchers_Users_2 == null)
            _fkEvouchers_Users_2 = new Users(this, Keys.FK_EVOUCHERS__USERS_2);

        return _fkEvouchers_Users_2;
    }

    @Override
    public Evouchers as(String alias) {
        return new Evouchers(DSL.name(alias), this);
    }

    @Override
    public Evouchers as(Name alias) {
        return new Evouchers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Evouchers rename(String name) {
        return new Evouchers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Evouchers rename(Name name) {
        return new Evouchers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, Long, UUID, LocalDateTime, UUID, LocalDateTime, String, String, LocalDateTime, BigDecimal, String, Integer, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
